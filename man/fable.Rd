% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fable.R
\name{fable}
\alias{fable}
\alias{fable.data.frame}
\alias{fable.formula}
\alias{fable.numeric}
\alias{fable.ftable}
\title{The mythical formatted table generator.}
\usage{
fable(x, ...)

\method{fable}{data.frame}(x, value, facets, ..., render, lab,
  expand.along = c("rows", "columns"), drop = c("both", "rows",
  "columns", "none"), collapse.cells = TRUE, row.names = T)

\method{fable}{formula}(x, data, ..., render, lab,
  expand.along = c("rows", "columns"), drop = c("both", "rows",
  "columns", "none"), collapse.cells = TRUE)

\method{fable}{numeric}(x, rowvars, colvars, ..., render, lab,
  expand.along = c("rows", "columns"), drop = c("both", "rows",
  "columns", "none"), collapse.cells = TRUE)

\method{fable}{ftable}(x, text = matrix(as.character(x), nrow(x)), ...,
  lab, drop = c("both", "rows", "columns", "none"),
  collapse.cells = TRUE)
}
\arguments{
\item{x}{An object.}

\item{...}{Additional arguments passed to \code{render}.}

\item{value}{A column name or position.}

\item{facets}{A two-sided formula of the form \code{r1 + r2 ~ c1 + c2} where
\code{r1, r2} specify row variables and \code{c1, c2} column variables for
splitting the data.}

\item{render}{A function to render the contents of each cell to character data.}

\item{lab}{Specify the contents of an extra table cell spanning
over all column labels.}

\item{expand.along}{Specify the direction to expand the table when render
returns a (named) vector.}

\item{drop}{If \code{TRUE} (the default), rows and columns with zero counts
will be dropped.}

\item{collapse.cells}{If \code{TRUE} (the default), row/column header cells
will be collapsed (merged) where appropriate.}

\item{row.names}{If \code{TRUE} (the default), row names will be shown in the
first column of the table. Set to \code{FALSE} to suppress row names.
Only applies when displaying whole \code{data.frame}.}

\item{data}{A data.frame.}

\item{rowvars}{A list of row variables for splitting the data.}

\item{colvars}{A list of column variables for splitting the data.}

\item{text}{A character matrix containing the textual content of each table cell.}
}
\value{
A \code{character} which contains an HTML table fragment. It has
additional class attributes that cause it to be displayed in a browser in an
interactive context, and rendered as HTML in a \code{knitr} context.
}
\description{
Creates formatted HTML tables of in a flexible, convenient way.
}
\section{Methods (by class)}{
\itemize{
\item \code{data.frame}: The \code{data.frame} method.

\item \code{formula}: The \code{formula} method.

\item \code{numeric}: The \code{numeric} method.

\item \code{ftable}: The \code{ftable} method.
}}

\examples{
# mtcars examples
fable(mtcars)
fable(mtcars, mpg, facets=(gear ~ cyl), lab="Cylinders")
fable(mpg ~ gear | cyl, data=mtcars, lab="Cylinders")
fable(rownames(mtcars) ~ gear | cyl, data=mtcars,
  render=paste, collapse="<br/>", lab="Cylinders")

# OrchardSprays examples
fable(head(OrchardSprays, 12))
fable(head(OrchardSprays, 12), row.names=FALSE)
fable(treatment ~ rowpos | colpos, data=OrchardSprays, lab="colpos")
fable(paste(treatment, decrease, sep="<br/>") ~ rowpos | colpos, data=OrchardSprays, lab="colpos")

rndr.meansd <- function(x) formatC(c(Mean=mean(x), SD=sd(x)), digits=3)
fable(decrease ~ treatment, data=OrchardSprays, render=rndr.meansd, expand.along="rows")
fable(decrease ~ treatment, data=OrchardSprays, render=rndr.meansd, expand.along="columns")

# ToothGrowth examples
fable(len ~ dose | supp, data=ToothGrowth, lab="Mean (SD)",
  render=function(x) sprintf("\%0.3g (\%0.3g)", mean(x), sd(x)))

fable(len ~ dose | supp, data=ToothGrowth, lab="Supplement Type",
  render=rndr.meansd)

fable(len ~ dose | supp, data=ToothGrowth, lab="Supplement Type",
  render=rndr.meansd, expand.along="columns")

}
\keyword{utilities}
